rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if user is admin
    function isAdmin() {
      return exists(/databases/$(database)/documents/user_roles/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/user_roles/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Users collection
    match /users/{userId} {
      allow read: if request.auth != null && (request.auth.uid == userId || isAdmin());
      allow create: if isAdmin();
      allow update: if request.auth.uid == userId || isAdmin();
      allow delete: if isAdmin();
    }
    
    // Photos collection
    match /photos/{photoId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }
    
    // Selections collection
    match /selections/{selectionId} {
      allow read: if request.auth != null && 
                    (resource.data.user_id == request.auth.uid || isAdmin());
      allow create: if request.auth != null && request.resource.data.user_id == request.auth.uid;
      allow update: if request.auth != null && 
                      (resource.data.user_id == request.auth.uid || isAdmin());
      allow delete: if request.auth != null && 
                      (resource.data.user_id == request.auth.uid || isAdmin());
    }
    
    // Feedback collection
    match /feedback/{feedbackId} {
      allow read: if isAdmin();
      allow create: if request.auth != null && request.resource.data.user_id == request.auth.uid;
      allow update: if false;
      allow delete: if isAdmin();
    }
    
    // Activity logs collection
    match /activity_logs/{logId} {
      allow read: if isAdmin();
      allow create: if request.auth != null;
      allow update: if false;
      allow delete: if isAdmin();
    }
    
    // Site settings collection
    match /site_settings/{settingId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }
    
    // Admin settings collection
    match /admin_settings/{settingId} {
      allow read, write: if isAdmin();
    }
    
    // User roles collection
    match /user_roles/{userId} {
      allow read: if request.auth != null;
      allow write: if isAdmin();
    }
  }
}
